{:rename-macros {}, :renames {}, :externs {jQuery {Event {prototype {target {}}}}, Object {fadeIn {}, text {}, data {}, focusout {}, attr {}, select {}, html {}, removeAttr {}, offset {}, top {}, css {}, toggleClass {}, val {}, slideDown {}, animate {}, fadeOut {}, toggle {}, slideUp {}, hide {}, prop {}, focus {}, on {}}, Error {}, setTimeout {}}, :use-macros {with-let javelin.core, cell= javelin.core, prop-cell javelin.core, cache-key hoplon.core, with-timeout hoplon.core}, :excludes #{}, :name hoplon.jquery, :imports nil, :requires {hoplon.core hoplon.core, cljsjs.jquery cljsjs.jquery, spec hoplon.spec, hoplon.spec hoplon.spec}, :uses {do! hoplon.core, on! hoplon.core, normalize-class hoplon.core, when-dom hoplon.core}, :defs {set-attributes! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :line 11, :column 7, :end-line 11, :end-column 22, :arglists (quote ([this kvs] [this k v & kvs])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}}, :name hoplon.jquery/set-attributes!, :variadic true, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}, :method-params ([this kvs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists ([this kvs] [this k v & kvs])}, set-styles! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([this kvs] [this k v & kvs])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}}, :name hoplon.jquery/set-styles!, :variadic true, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}, :method-params ([this kvs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists ([this kvs] [this k v & kvs])}, text-val! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([e] [e v])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}}, :name hoplon.jquery/text-val!, :variadic false, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}, :method-params ([e] [e v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists ([e] [e v])}, check-val! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :line 35, :column 7, :end-line 35, :end-column 17, :arglists (quote ([e] [e v])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}}, :name hoplon.jquery/check-val!, :variadic false, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-stq5yl/index.html.out/hoplon/jquery.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}, :method-params ([e] [e v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists ([e] [e v])}}, :require-macros {javelin.core javelin.core, hoplon.core hoplon.core}, :cljs.analyzer/constants {:seen #{:data/* :hoplon.spec/value :hoplon.spec/boolean :fade-toggle :prop/* :css/* :svg/* :value :slide-toggle :hoplon.spec/string :css :toggle :hoplon.core/default :class :focus-select :focus :attr/* :hoplon.spec/class :hoplon.spec/map :html/* :scroll-to :select :html :text :scrollTop :attr}, :order [:hoplon.core/default :attr :css/* :data/* :html/* :svg/* :attr/* :hoplon.spec/map :prop/* :css :value :hoplon.spec/value :class :hoplon.spec/class :toggle :hoplon.spec/boolean :slide-toggle :fade-toggle :focus :select :focus-select :text :hoplon.spec/string :html :scroll-to :scrollTop]}, :doc nil}