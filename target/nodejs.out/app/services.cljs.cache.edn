{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name app.services, :imports nil, :requires {feathers feathers.app, feathers.app feathers.app, services meta.services, meta.services meta.services, hooks meta.services.hooks, meta.services.hooks meta.services.hooks}, :uses nil, :defs {messages {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-iubjet/app/services.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([app & [store]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(app [store])], :arglists ([app & [store]]), :arglists-meta (nil)}}, :name app.services/messages, :variadic true, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/degree9/degree9io/l8y/-iubjet/app/services.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(app [store])], :arglists ([app & [store]]), :arglists-meta (nil)}, :method-params [(app [store])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([app & [store]])}}, :require-macros {feathers feathers.app, feathers.app feathers.app}, :cljs.analyzer/constants {:seen #{:find :get :memory :before}, :order [:memory :before :find :get]}, :doc nil}